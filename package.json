{
  "name": "service-connect",
  "version": "0.0.22",
  "description": "",
  "main": "index.js",
  "scripts": {
    "build": "babel -d ./lib ./src -s",
    "test": "nyc --reporter=lcov --reporter=text ./node_modules/.bin/mocha --compilers js:babel-core/register ",
    "test2": "./node_modules/.bin/babel-node node_modules/.bin/istanbul cover --dir test/coverage node_modules/mocha/bin/_mocha -- --compilers js:babel-core/register test/*",
    "test3": "babel-node ./node_modules/istanbul/lib/cli cover node_modules/mocha/bin/_mocha -- --recursive",
    "test4": "./node_modules/.bin/babel-node ./node_modules/.bin/nyc mocha --recursive",
    "eslint": "eslint -c .eslintrc.json src examples",
    "examples.commands.consumer": "node --inspect=5859 ./examples/Commands/consumer.js",
    "examples.commands.sender": "node ./examples/Commands/sender.js",
    "examples.filters.consumer": "node --inspect=5859 ./examples/Filters/consumer.js",
    "examples.filters.sender": "node ./examples/Filters/sender.js",
    "examples.competing-consumers.consumer1": "node ./examples/CompetingConsumers/consumer1.js",
    "examples.competing-consumers.consumer2": "node ./examples/CompetingConsumers/consumer2.js",
    "examples.competing-consumers.sender": "node ./examples/CompetingConsumers/sender.js",
    "examples.events.consumer1": "node ./examples/Events/consumer1.js",
    "examples.events.consumer2": "node ./examples/Events/consumer2.js",
    "examples.events.sender": "node ./examples/Events/publisher.js",
    "examples.request-reply.request": "node ./examples/RequestReply/requester.js",
    "examples.request-reply.reply": "node ./examples/RequestReply/replier.js",
    "examples.scatter-gather.request": "node ./examples/ScatterGather/requester.js",
    "examples.scatter-gather.reply1": "node ./examples/ScatterGather/replier1.js",
    "examples.scatter-gather.reply2": "node ./examples/ScatterGather/replier2.js",
    "examples.retries.consumer": "node ./examples/Retries/consumer.js",
    "examples.retries.sender": "node ./examples/Retries/sender.js"
  },
  "config": {
    "mocha-sonar-reporter": {
      "classname": "Test",
      "testdir": "test",
      "outputfile": "reports/xunit.xml"
    }
  },
  "author": "Tim Watson",
  "email": "tswatson123@gmail.com",
  "url": "https://github.com/twatson83",
  "license": "MIT",
  "devDependencies": {
    "babel-cli": "^6.11.4",
    "babel-core": "^6.13.2",
    "babel-eslint": "^7.2.3",
    "babel-loader": "^6.2.4",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-istanbul": "^4.1.5",
    "babel-plugin-transform-object-assign": "^6.8.0",
    "babel-polyfill": "^6.13.0",
    "babel-preset-es2015": "^6.13.2",
    "babel-preset-stage-1": "^6.13.0",
    "chai": "^3.5.0",
    "cross-env": "^5.1.1",
    "eslint": "^3.7.1",
    "eslint-plugin-react": "^6.3.0",
    "istanbul": "^0.4.5",
    "jsdoc": "^3.4.1",
    "mocha": "^3.0.2",
    "mocha-sonar-reporter": "^0.1.6",
    "mocha-sonarqube-reporter": "^1.0.1",
    "nyc": "^11.3.0",
    "promise": "^7.1.1",
    "sinon": "2.2.0"
  },
  "dependencies": {
    "amqplib": "^0.4.2",
    "babel-istanbul": "^0.12.2"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/twatson83/ServiceConnect-NodeJS"
  },
  "keywords": [
    "service",
    "bus",
    "message",
    "messaging",
    "rabbitmq",
    "event",
    "publish",
    "subscribe",
    "listen",
    "dispatch",
    "service connect",
    "service-connect",
    "connect"
  ]
}
